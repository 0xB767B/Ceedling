#!/usr/bin/env ruby

require 'rubygems'
require 'fileutils'
require 'thor'

def here
  File.dirname(__FILE__) + "/.."
end

class CeedlingTasks < Thor
  include Thor::Actions

  desc "new PROJECT_NAME", "create a new ceedling project"
  method_option :nodocs, :type => :boolean, :default => false, :desc => "No docs in vendor directory"
  def new(name)
    ceedling_path     = File.join(name, 'vendor', 'ceedling')
    source_path       = File.join(name, 'src')
    test_path         = File.join(name, 'test')
    test_support_path = File.join(name, 'test/support')
    build_path        = File.join(name, 'build')

    [ceedling_path, source_path, test_path, test_support_path, build_path].each do |d|
      FileUtils.mkdir_p d
    end

    folders = %w{plugins lib release}
    folders << 'docs' unless options[:nodocs]

    folders.map do |f|
      {:src => f, :dst => File.join(ceedling_path, f)}
    end.each do |f|
      directory f[:src], f[:dst]
    end

    sub_components = [
      {:src => 'vendor/c_exception/lib/',     :dst => 'vendor/c_exception/lib'},
      {:src => 'vendor/c_exception/release/', :dst => 'vendor/c_exception/release'},
      {:src => 'vendor/cmock/config/',        :dst => 'vendor/cmock/config'},
      {:src => 'vendor/cmock/lib/',           :dst => 'vendor/cmock/lib'},
      {:src => 'vendor/cmock/release/',       :dst => 'vendor/cmock/release'},
      {:src => 'vendor/cmock/src/',           :dst => 'vendor/cmock/src'},
      {:src => 'vendor/constructor/lib/',     :dst => 'vendor/constructor/lib'},
      {:src => 'vendor/deep_merge/lib/',      :dst => 'vendor/deep_merge/lib'},
      {:src => 'vendor/diy/lib',              :dst => 'vendor/diy/lib'},
      {:src => 'vendor/unity/auto/',          :dst => 'vendor/unity/auto'},
      {:src => 'vendor/unity/release/',       :dst => 'vendor/unity/release'},
      {:src => 'vendor/unity/src/',           :dst => 'vendor/unity/src'},
    ]

    sub_components.each do |c|
      directory c[:src], File.join(ceedling_path, c[:dst]) 
    end

    files = %w{rakefile.rb project.yml}
    files.each do |f|
      copy_file File.join('assets', f), File.join(name, f)
    end

    puts "\n"
    puts "Project '#{name}' created!"
    puts " - Tool documentation is located in vendor/ceedling/docs" if not options[:nodocs]
    puts " - Execute 'rake -T' to view available test & build tasks"
    puts ''
  end

  desc "examples", "list available example projects"
  def examples()
    puts "Available sample projects:"
    FileUtils.cd(File.join(here, "examples")) do
      Dir["*"].each {|proj| puts "  #{proj}"}
    end
  end

  desc "example PROJ_NAME [DEST]", "create specified example project (in DEST, if specified)"
  def example(proj_name, dest="temp_sensor")
    throw "oshit"
  end

end

CeedlingTasks.source_root here
CeedlingTasks.start
